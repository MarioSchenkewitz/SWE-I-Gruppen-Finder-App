@model CreateEditGroupContainer

@{
    string action;
    string groupName;
    List<ActivityCategoryType> checkedActivities;
    GenderRestrictionType checkedGenderRestriction;
    int minParticipants;
    int maxParticipants;
    string meetupDateTime;
    string submitButtonText;

    if (Model.SportGroupToEdit == null)
    {
        ViewData["Title"] = "Gruppe erstellen";
        action = "AddGroup";
        groupName = string.Empty;
        checkedActivities = Enumerable.Empty<ActivityCategoryType>().ToList();
        checkedGenderRestriction = GenderRestrictionType.NoRestriction;
        minParticipants = ApplicationConstants.MinSportGroupParticipants;
        maxParticipants = ApplicationConstants.MaxSportGroupParticipants;
        meetupDateTime = DateTime.Now.AddDays(1).ToString("yyyy-MM-ddTHH:mm");
        submitButtonText = "Gruppe erstellen";
    }
    else
    {
        ViewData["Title"] = "Gruppe bearbeiten";
        action = "UpdateGroup";
        groupName = Model.SportGroupToEdit.GroupName;
        checkedActivities = Model.SportGroupToEdit.ActivityTags.Select(t => t.ActivityCategory).ToList();
        checkedGenderRestriction = Model.SportGroupToEdit.GenderRestrictionTag.GenderRestriction;
        minParticipants = Model.SportGroupToEdit.Participants.Count;
        if (minParticipants < ApplicationConstants.MinSportGroupParticipants)
            minParticipants = ApplicationConstants.MinSportGroupParticipants;

        maxParticipants = Model.SportGroupToEdit.MaxParticipants;
        meetupDateTime = Model.SportGroupToEdit.MeetupDate.ToString("yyyy-MM-ddTHH:mm");
        submitButtonText = "Gruppe bearbeiten";
    }
}

<link rel="stylesheet" href="~/css/createeditgroup.css" />

<div class="viewcontainer">
    <form class="propertiesformgrid" asp-controller="SportGroup" asp-action="@action">
        <h3 class="propertiesheading">Eigenschaften</h3>

        <b>Gruppenname</b>
        <input type="text" class="textfield" name="GroupName" value="@groupName" maxlength="@ApplicationConstants.MaxGroupNameLength" />

        <div>
            <b>Aktivitäten</b>
        </div>
        <div class="activitygrid">
            @foreach (var activityTag in Model.AllActivityTags)
            {
                <div>
                    <input type="checkbox" name="ActivityCategories" value="@activityTag.ActivityCategory" checked="@checkedActivities.Contains(activityTag.ActivityCategory)" />
                    <img src="@activityTag.IconUrl" title="@activityTag.ActivityCategory" />
                </div>
            }
        </div>

        <b>Geschlechtsbeschränkung</b>
        <div class="gendergrid">
            @foreach (var genderRestrictionTag in Model.AllGenderRestrictionTags)
            {
                <div>
                    <input type="radio" name="GenderRestriction" value="@genderRestrictionTag.GenderRestriction" checked="@(checkedGenderRestriction == genderRestrictionTag.GenderRestriction)" />
                    <img src="@genderRestrictionTag.IconUrl" title="@genderRestrictionTag.GenderRestriction" />
                </div>
            }
        </div>

        <b>Max. Teilnehmer</b>
        <div>
            <input id="participantsslider" class="slider" type="range" min="@minParticipants" max="@maxParticipants" name="MaxParticipants" value="@maxParticipants" />
            <div class="right">
                <input id="participantsslidervalue" type="number" class="valuelabel" min="2" max="20" />
                <span>Personen</span>
            </div>
        </div>

        <b>Datum und Zeit</b>
        <input id="datetimecalender" type="datetime-local" class="hcenter" name="MeetupDate" value="@meetupDateTime" min="@DateTime.Today.ToString("yyyy-MM-ddTHH:mm")" />

        @if (Model.SportGroupToEdit != null)
        {
            <input type="hidden" name="groupId" value="@Model.SportGroupToEdit.Id" />
        }

        <input id="submitbutton" type="submit" class="primarybutton hcenter" value="@submitButtonText" />
    </form>
    <div class="mapcontainer" id="map">
        <script>
            function initMap() {
                const myLatLng = { lat: -25.363, lng: 131.044 };
                const map = new google.maps.Map(document.getElementById("map"), {
                    zoom: 4,
                    center: myLatLng,
                });
            }
        </script>
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDyFncc8DAmnkXS1XPR9IIDcvB7DeCQ84c&callback=initMap&v=weekly"
                async defer></script>
    </div>

</div>

<script src="~/js/createeditgroup.js" asp-append-version="true"></script>

